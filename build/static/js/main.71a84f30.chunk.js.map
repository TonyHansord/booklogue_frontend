{"version":3,"sources":["components/User/SignupLogin.js","App.js","reportWebVitals.js","index.js"],"names":["SignupLogin","_ref","authType","show","handleClose","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","name","setName","_jsx","_Fragment","children","_jsxs","Modal","onHide","Header","closeButton","Title","Body","Form","noValidate","onSubmit","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","data","Group","controlId","Label","Control","required","type","placeholder","value","onChange","target","Feedback","Button","variant","onClick","App","setShow","setAuthType","handleShow","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.71a84f30.chunk.js","sourcesContent":["import { Form } from 'react-bootstrap';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction SignupLogin({ authType, show, handleClose }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('submit');\n\n    if (authType === 'Sign Up') {\n      fetch('/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password,\n          confirmPassword: confirmPassword,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n        });\n    } else {\n      fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n        });\n    }\n\n    handleClose();\n  };\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{authType}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form noValidate onSubmit={handleSubmit}>\n            {authType === 'Sign Up' ? (\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  required\n                  type=\"text\"\n                  placeholder=\"Enter name\"\n                  name=\"name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid name.\n                </Form.Control.Feedback>\n              </Form.Group>\n            ) : null}\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                placeholder=\"Enter email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid email.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide a valid password.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            {authType === 'Sign Up' ? (\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  required\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Please provide a valid password.\n                </Form.Control.Feedback>\n              </Form.Group>\n            ) : null}\n\n            <Button variant=\"secondary\" type=\"submit\">\n              {authType}\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Cancel\n            </Button>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default SignupLogin;\n","import './App.css';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport SignupLogin from './components/User/SignupLogin';\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [authType, setAuthType] = useState('Log In');\n\n  const handleClose = () => setShow(false);\n  const handleShow = (authType) => {\n    setAuthType(authType);\n    setShow(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Button\n          variant=\"btn btn-outline-primary\"\n          onClick={() => handleShow('Log In')}\n        >\n          Login\n        </Button>\n        <Button variant=\"btn btn-primary\" onClick={() => handleShow('Sign Up')}>\n          Signup\n        </Button>\n        <SignupLogin\n          show={show}\n          handleClose={handleClose}\n          authType={authType}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}